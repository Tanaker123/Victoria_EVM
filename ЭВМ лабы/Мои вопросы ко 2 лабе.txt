Раскрутка циклов (loop unrolling) — это техника оптимизации, которая заключается в уменьшении количества итераций цикла путем выполнения нескольких итераций за одну итерацию. Это позволяет уменьшить накладные расходы на управление циклом (например, проверку условия цикла и переходы) и увеличить параллелизм на уровне команд.

Преимущества раскрутки циклов:
Уменьшение накладных расходов:

Каждая итерация цикла включает в себя накладные расходы на проверку условия и переходы. Раскрутка циклов уменьшает количество таких накладных расходов.

Увеличение параллелизма:

Раскрутка циклов позволяет процессору выполнять несколько операций параллельно, что увеличивает использование конвейера и повышает производительность.

Улучшение использования кэша:

Раскрутка циклов может помочь улучшить использование кэша памяти, так как несколько итераций могут обрабатываться за один проход, что уменьшает количество промахов кэша.
Отображение переменных на регистры — это процесс, при котором компилятор выделяет регистры процессора для хранения значений переменных вместо использования памяти. Это позволяет уменьшить количество обращений к памяти и повысить производительность.

Возможность отображения переменных на регистры:
Количество регистров:

Компилятор может отобразить переменные на регистры, если у процессора достаточно свободных регистров. Если регистров недостаточно, компилятор будет использовать стек или память.

Жизненный цикл переменных:

Компилятор анализирует жизненный цикл переменных (время, в течение которого переменная используется) и пытается отобразить наиболее часто используемые переменные на регистры.

Зависимости между переменными:

Если переменные зависят друг от друга, компилятор должен учитывать эти зависимости при отображении на регистры.
Переупорядочивание команд (instruction reordering) — это техника оптимизации, при которой компилятор или процессор изменяет порядок выполнения команд без изменения результата программы. Это позволяет улучшить использование конвейера, минимизировать зависимости и улучшить использование кэша.

Преимущества переупорядочивания команд:
Улучшение использования конвейера:

Переупорядочивание команд позволяет заполнять простои в конвейере, что повышает производительность.

Минимизация зависимостей:

Переупорядочивание команд позволяет минимизировать зависимости между командами, что уменьшает время ожидания и повышает производительность.

Улучшение использования кэша:

Переупорядочивание команд может помочь улучшить использование кэша памяти, что уменьшает количество промахов кэша и повышает производительность.


Компилятор может переставить команды между собой, если они между собой не связаны
И делает это чтобы загрузить процессор эффективнее
Например за элементарные арифметические операции отвечает другая часть памяти или процессора
Чем за проверку условий
И поэтому команду переставляют, чтобы одновременно загрузить как можно больше